---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import PortfolioSection from '../components/PortfolioSection.astro';
import ContactSection from '../components/ContactSection.astro';
import Footer from '../components/Footer.astro';
import { projects } from '../data/projects';
---

<Layout title="Полина Мигранова | Графический дизайнер">
  <main 
    class="bg-primary text-white min-h-screen"
    x-data="{
      isModalOpen: false,
      currentProject: null,
      currentSlideIndex: 0,
      
      // Store состояний загрузки изображений
      imageStore: {
        states: new Map(),
        
        // Генерация уникального ID для изображения
        generateId(src, width = '', height = '') {
          const normalizedSrc = typeof src === 'string' ? src : src.src || '';
          return btoa(normalizedSrc + width + height).replace(/[^a-zA-Z0-9]/g, '').substring(0, 16);
        },
        
        // Установка состояния изображения
        setState(imageId, state, metadata = {}) {
          this.states.set(imageId, {
            state,
            timestamp: Date.now(),
            ...metadata
          });
          
          // Диспатчим событие для реактивности
          window.dispatchEvent(new CustomEvent('imageStateChanged', {
            detail: { imageId, state, metadata }
          }));
        },
        
        // Получение состояния изображения
        getState(imageId) {
          return this.states.get(imageId)?.state || 'idle';
        },
        
        // Получение метаданных изображения
        getMetadata(imageId) {
          return this.states.get(imageId) || {};
        },
        
        // Проверка состояния
        isIdle(imageId) { return this.getState(imageId) === 'idle'; },
        isLoading(imageId) { return this.getState(imageId) === 'loading'; },
        isLoaded(imageId) { return this.getState(imageId) === 'loaded'; },
        isError(imageId) { return this.getState(imageId) === 'error'; },
        
        // Очистка старых состояний (старше 5 минут)
        cleanup() {
          const now = Date.now();
          const maxAge = 5 * 60 * 1000; // 5 минут
          
          for (const [imageId, data] of this.states) {
            if (now - data.timestamp > maxAge) {
              this.states.delete(imageId);
            }
          }
        },
        
        // Получение статистики
        getStats() {
          const states = Array.from(this.states.values());
          return {
            total: states.length,
            idle: states.filter(s => s.state === 'idle').length,
            loading: states.filter(s => s.state === 'loading').length,
            loaded: states.filter(s => s.state === 'loaded').length,
            error: states.filter(s => s.state === 'error').length
          };
        }
      },
      
      init() {
        // Инициализация imageStore
        this.imageStore.cleanup();
        
        // Периодическая очистка imageStore
        setInterval(() => {
          this.imageStore.cleanup();
        }, 60000); // каждую минуту
        
        // Обработка клавиш
        document.addEventListener('keydown', (e) => {
          if (!this.isModalOpen) return;
          
          if (e.key === 'Escape') {
            this.closeModal();
          } else if (e.key === 'ArrowRight') {
            this.nextSlide();
          } else if (e.key === 'ArrowLeft') {
            this.prevSlide();
          }
        });
      },
      
      openModal(projectId) {
        const project = window.portfolioProjects.find(p => p.id === projectId);
        if (project) {
          this.currentProject = project;
          this.currentSlideIndex = 0;
          this.isModalOpen = true;
          document.body.style.overflow = 'hidden';
        }
      },
      
      closeModal() {
        this.isModalOpen = false;
        this.currentProject = null;
        this.currentSlideIndex = 0;
        document.body.style.overflow = '';
      },
      
      nextSlide() {
        if (this.currentProject && this.currentProject.slides) {
          const totalSlides = this.currentProject.slides.length;
          this.currentSlideIndex = (this.currentSlideIndex + 1) % totalSlides;
        }
      },
      
      prevSlide() {
        if (this.currentProject && this.currentProject.slides) {
          const totalSlides = this.currentProject.slides.length;
          this.currentSlideIndex = this.currentSlideIndex === 0 
            ? totalSlides - 1 
            : this.currentSlideIndex - 1;
        }
      },
      
      get currentSlide() {
        return this.currentProject?.slides?.[this.currentSlideIndex] || null;
      },
      
      // Методы для работы с imageStore из других компонентов
      setImageState(imageId, state, metadata = {}) {
        this.imageStore.setState(imageId, state, metadata);
      },
      
      getImageState(imageId) {
        return this.imageStore.getState(imageId);
      },
      
      getImageMetadata(imageId) {
        return this.imageStore.getMetadata(imageId);
      }
    }"
    @open-modal="openModal($event.detail.projectId)"
  >
    <!-- Шапка сайта -->
    <Header />
    
    <!-- Секция портфолио -->
    <PortfolioSection />
    
    <!-- Секция связаться -->
    <ContactSection />
    
    <!-- Новый Footer -->
    <Footer />

    <!-- Модальное окно -->
    <div 
      x-show="isModalOpen" 
      x-transition.opacity.duration.300ms
      @click.self="closeModal()" 
      class="fixed inset-0 z-50 flex items-center justify-center bg-black/80 backdrop-blur-sm p-4" 
      style="display: none;"
    >
      <div 
        x-show="isModalOpen"
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 scale-95"
        x-transition:enter-end="opacity-100 scale-100"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 scale-100"
        x-transition:leave-end="opacity-0 scale-95"
        @click.stop=""
        class="relative w-full max-w-7xl mx-auto bg-primary border border-white/10 rounded-[1.875rem] md:rounded-[1.25rem] shadow-xl overflow-hidden"
      >
        <!-- Контент модального окна -->
        <div class="h-[90vh] overflow-y-auto modal-scrollbar">
          <div class="p-[3.75rem] md:p-[2.5rem]">
            <!-- Заголовок -->
            <header class="space-y-[2.8125rem] md:space-y-[1.875rem] mb-8" x-show="currentProject">
              <div>
                <h3 
                  x-text="currentProject?.title || ''"
                  class="font-mv-skifer text-[4.6875rem] md:text-[3.125rem]"
                ></h3>
                <h4 
                  x-text="currentProject?.description || ''"
                  class="mb-4 font-extralight text-[3.28125rem] md:text-2xl leading-normal"
                  x-show="currentProject?.description"
                ></h4>
                <p 
                  class="font-onest text-[3.28125rem] md:text-[1.25rem]"
                  x-show="currentProject?.audience"
                >
                  <span class="font-semibold">Целевая аудитория: </span>
                  <span class="opacity-80" x-text="currentProject?.audience || ''"></span>
                </p>
              </div>
            </header>

            <!-- Слайдер -->
            <div class="slider w-full max-w-[93.75rem] mx-auto overflow-hidden group relative" x-show="currentSlide">
              <!-- Изображение слайда -->
              <div class="overflow-hidden mb-6">
                <img
                  x-bind:src="currentSlide?.image?.src || ''"
                  x-bind:alt="`${currentProject?.title || ''} - слайд ${currentSlideIndex + 1}`"
                  class="w-full object-contain rounded-[1.25rem]"
                  loading="lazy"
                />
              </div>

              <!-- Кнопки навигации -->
              <div class="flex justify-center space-x-6 mb-6" x-show="currentProject?.slides?.length > 1">
                <button
                  @click="prevSlide()"
                  class="border transition-all duration-300 rounded-full flex items-center justify-center text-7xl w-[5rem] h-[5rem] border-white/20 hover:bg-white hover:text-[#3624A6] cursor-pointer active:scale-95 transform md:w-[3rem] md:h-[3rem] md:text-5xl"
                  aria-label="Предыдущий слайд"
                >&larr;</button>

                <button
                  @click="nextSlide()"
                  class="border transition-all duration-300 rounded-full flex items-center justify-center text-7xl w-[5rem] h-[5rem] border-white/20 hover:bg-white hover:text-[#3624A6] cursor-pointer active:scale-95 transform md:w-[3rem] md:h-[3rem] md:text-5xl"
                  aria-label="Следующий слайд"
                >&rarr;</button>
              </div>

              <!-- Описание слайда -->
              <div class="font-onest text-[3.28125rem] md:text-[1.25rem] space-y-4">
                <p x-show="currentSlide?.task">
                  <span class="font-semibold">Задача: </span>
                  <span class="opacity-80" x-text="currentSlide?.task || ''"></span>
                </p>
                <p x-show="currentSlide?.solution">
                  <span class="font-semibold">Решение: </span>
                  <span class="opacity-80" x-text="currentSlide?.solution || ''"></span>
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Кнопка закрытия -->
        <button
          @click="closeModal()"
          class="absolute top-6 right-6 p-4 md:p-2 rounded-full bg-black/40 backdrop-blur-sm hover:bg-black/60 focus:outline-none focus:ring-2 focus:ring-white/50 z-50 group transition-all duration-300 ease-in-out shadow-lg"
          aria-label="Закрыть"
        >
          <svg
            class="w-12 h-12 md:w-6 md:h-6 text-white/80 group-hover:text-white transition-colors duration-300 ease-in-out"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"
            />
          </svg>
        </button>
      </div>
    </div>
  </main>
</Layout>

<script define:vars={{ projects }}>
  // Передаем данные проектов в Alpine.js
  window.portfolioProjects = projects;
</script>